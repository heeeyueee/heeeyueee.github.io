[{"content":"CSS语法   语法一:样式语法\n选择器 {\r属性名: 属性值;\r/*注释*/\r}\r  所有符号都是英文符号，如果写错了，浏览器会警告 区分大小写，a 和 A 是不同的东西 没有 // 注释 最后一个分号可以省略，但建议不要省略    语法二:at 语法\n@charset \u0026quot;UTF-8\u0026quot;;\r@import url(2.css);\r@media (min-width: 100px) and (max-width: 200px) {\r语法一\r}\r  @charset, 定义样式表使用的字符集，但 UTF-8 是字符编码 encoding，@charset 必须放在第一行 @import, 告诉 CSS 引擎引入一个外部样式表 @media, 如果满足媒介查询的条件则条件规则组里的规则生效 前两个 at 语法必须以分号 ; 结尾    文档流和文本流   文本流 Text flow\n文本流是元素内部的一系列的字符的排列规则，简单来说是文档的读取和输出顺序，也就是我们通常看到的由左到右、由上而下的读取和输出形式，在网页中每个元素都是按照这个顺序进行排序和显示的，是单纯的相对于文字段落来说的，与容纳文字的元素无关。\n  文档流 normal flow\n文档流,英文是normal flow,又翻译为常规流,标准流,正常流,普通流等。\n文档流指的是HTML中元素在计算布局排版的过程中,所有处于文档流中的元素会自动的从左到右(非块级元素),从上到下(块级元素)的排列规则。\n  脱离文档流与脱离文本流\n  使用浮动(float)\n  使用绝对定位(position:absolute/fixed)\n区别   浮动会使元素脱离文档流（其他块级元素计算高度时会忽略浮动元素）,但是不会脱离文本流,在于其他盒子的文本内容计算布局的时候,还是占位置的。\n  绝对定位会使元素脱离文档流,同时也会脱离文本流, 在于其他盒子的文本内容计算布局的时候,不占位置。\n        块级元素，内联元素和行块元素   三者转换\n可以通过CSS设置display属性来转换display：block、inline、inline-block。inline 元素从左到右，到达最右边才会换行 block 元素从上到下，每一个都另起一行。inline-block 也是从左到右。\n  宽度\n  inline 宽度为内部 inline 元素的和，不能用 width 指定\n  block 默认自动计算宽度，可用 width 指定\n  inline-block 结合前两者特点，可用 width\n    高度\n  inline 高度由 line-height 间接确定（与字体相关），跟 height 无关\n  block 高度由包裹的文档流元素决定 ,可以设 height,没有元素为0，文档流元素的高度由行高line-height决定.\n  inline-block 跟 block 类似，可以设置 height\n    CSS盒模型   概念\n外边距——\u0026gt; 边框——\u0026gt; 内边距——\u0026gt;内容区\nCSS盒模型作用于可以放入内容的块级盒子，如div、span等等。一般使用border-box\n  元素\nCSS盒子包含以下5个元素：width、height、padding、border、margin。\n  标准盒模型（content-box ）替代（IE）的盒模型（border-box）\n  标准盒模型（content-box ）content-box width = 内容宽度\n  border-box width = 内容宽度 + padding + border\n    ​\noverflow 溢出 等内容的宽度或高度大于容器的，会溢出,可用 overflow 来设置是否显示滚动条\n  auto 是灵活设置\n  scroll 是永远显示\n  hidden 是直接隐藏溢出部分\n  visible 是直接显示溢出部分\n  overflow 可以分为 overflow-x 和 overflow-y\n  margin 合并  父子 margin 合并,兄弟 margin 合并 阻止合并  父子合并用 padding / border 挡住 父子合并用 overflow: hidden 挡住 兄弟合并可以用 inline-block 消除   更多参考：CSS margin合并问题  基本单位   颜色\n   颜色值 说明     十六进制RGB值 #02798b   RGB值 rgb(2, 121, 139)   RGBA值 rgba(2, 121, 139, .3透明度)   HSL值 hsl(188色调, 97%饱和度, 28%亮度)   HSLA 值 hsla(188, 97%, 28%, .3透明度)      长度单位\n   长度单位 说明     px 像素   em 在 font-size 中使用是相对于父元素的字体大小，在其他属性中使用是相对于自身的字体大小，如 width   rem 根元素的字体大小   vw 视窗宽度的1%   vh 视窗高度的1%   百分数 相对于其他值设置的       参考博客 HTML中的文档流和文本流\nCSS盒模型\nCSS margin合并问题\n","date":"2020-11-08","permalink":"http://heeeyueee.github.io/post/css%E5%9F%BA%E7%A1%80/","tags":["css"],"title":"CSS基础"},{"content":"列表标签   \u0026lt;ol\u0026gt; —— ordered list\n\u0026lt;ol\u0026gt;标签是一个有序列表容器（ordered list），会在内部的列表项前面产生数字编号。\n 用法   常规用法  \u0026lt;ol\u0026gt;\r\u0026lt;li\u0026gt;列表项 A\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;列表项 B\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;列表项 C\u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r 嵌套用法  \u0026lt;ol\u0026gt;标签内部可以嵌套\u0026lt;ol\u0026gt;标签或\u0026lt;ul\u0026gt;标签，形成多级列表  属性   reversed  reversed属性产生倒序的数字列表\nstart  start属性的值是一个整数，表示数字列表的起始编号。\ntype  type属性指定数字编号的样式。目前，浏览器支持以下样式。\na：小写字母\nA：大写字母\ni：小写罗马数字\nI：大写罗马数字\n1：整数（默认值）\n  \u0026lt;ul\u0026gt; —— unordered list\n\u0026lt;ul\u0026gt;标签是一个无序列表容器（unordered list），会在内部的列表项前面产生实心小圆点，作为列表符号。\n 用法  \u0026lt;ul\u0026gt;标签内部可以嵌套\u0026lt;ul\u0026gt;或\u0026lt;ol\u0026gt;，形成多级列表。\n  \u0026lt;li\u0026gt; —— list item\n\u0026lt;li\u0026gt;表示列表项，用在\u0026lt;ol\u0026gt;或\u0026lt;ul\u0026gt;容器之中。\n有序列表\u0026lt;ol\u0026gt;之中，\u0026lt;li\u0026gt;有一个value属性，定义当前列表项的编号，后面列表项会从这个值开始编号。\n  \u0026lt;img\u0026gt;图像标签   简介\n\u0026lt;img\u0026gt;默认是一个行内元素，与前后的文字处在同一行。\u0026lt;img\u0026gt;可以放在\u0026lt;a\u0026gt;标签内部，使得图片变成一个可以点击的\n  链接。\r  属性   src  src属性指定图片的网址,可以是绝对URL，也可以是相对URL\nalt  alt属性用来设定图片的文字说明。图片不显示时（比如下载失败，或用户关闭图片加载），图片的位置上会显示该文本。\nwidth属性 height属性  图片默认以原始大小插入网页，width属性和height属性可以指定图片显示时的宽度和高度，单位是像素或百分比。\nsrcset、sizes(详见MDN)  srcset属性用来指定多张图像，适应不同像素密度的屏幕sizes属性用来不同尺寸的屏幕，显示不同大小的图像\n链接标签  \u0026lt;a\u0026gt;   属性    href\n 网址 href=\u0026quot;//www.example.com/\u0026quot;(浏览器会自动匹配)\n路径 href=\u0026quot;./index.md\u0026quot;\n伪协议 href=\u0026ldquo;javascript:void(0);\u0026quot;(去除默认跳转)\nid href=\u0026quot;#xxx\u0026rdquo; 跳转到内部元素\n   target\ntarget属性指定如何展示打开的链接。它可以是在指定的窗口打开 使用target属性的时候，最好跟rel=\u0026ldquo;noreferrer\u0026quot;一起使用，这样可以避免安全风险。\n _self：当前窗口打开，这是默认值\n_blank：新窗口打开\n_parent：上层窗口打开，这通常用于从父窗口打开的子窗口\n_top：顶层窗口打开。\n   rel\nrel属性说明链接与当前页面的关系。\n noopener：告诉浏览器打开链接时，不让链接窗口通过 JavaScript 的window.opener属性引用原始窗口，这样就提高了安全性。\nnoreferrer：告诉浏览器打开链接时，不要将当前网址作为 HTTP 头信息的Referer字段发送出去，这样可以隐藏点击的来源\n   download\ndownload属性表明当前链接用于下载，而不是跳转到另一个 URL。 如果download属性设置了值，那么这个值就是下载的文件名。\n\u0026lt;a href=\u0026quot;foo.exe\u0026quot; download=\u0026quot;bar.exe\u0026quot;\u0026gt;点击下载\u0026lt;/a\u0026gt;\r     \u0026lt;link\u0026gt; \u0026lt;link\u0026gt;标签主要用于将当前网页与相关的外部资源联系起来，通常放在\u0026lt;head\u0026gt;元素里面。最常见的用途就是加载 CSS 样式表。\n\u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;theme.css\u0026quot;\u0026gt;\r   \u0026lt;table\u0026gt;表格标签   \u0026lt;table\u0026gt;\n\u0026lt;table\u0026gt;是一个块级容器标签，所有表格内容都要放在这个标签里面。\n  \u0026lt;caption\u0026gt;\n\u0026lt;caption\u0026gt;总是\u0026lt;table\u0026gt;里面的第一个子元素，表示表格的标题。该元素是可选的。\n  \u0026lt;thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tfoot\u0026gt;\n\u0026lt;thead\u0026gt;、\u0026lt;tbody\u0026gt;、\u0026lt;tfoot\u0026gt;都是块级容器元素，且都是\u0026lt;table\u0026gt;的一级子元素，分别表示表头、表体和表尾。\n  \u0026lt;tr\u0026gt;——table row\n\u0026lt;tr\u0026gt;标签表示表格的一行（table row）\n  \u0026lt;th\u0026gt; \u0026lt;td\u0026gt;——table data\n\u0026lt;th\u0026gt;和\u0026lt;td\u0026gt;都用来定义表格的单元格。其中，\u0026lt;th\u0026gt;是标题单元格，\u0026lt;td\u0026gt;是数据单元格。\n 属性   colspan属性，rowspan属性  单元格会有跨越多行或多列的情况，这要通过colspan属性和rowspan属性设置，前者表示单元格跨越的栏数，后者表示单元格跨越的行数。\nscope属性  scope属性只有\u0026lt;th\u0026gt;标签支持，一般不在\u0026lt;td\u0026gt;标签使用，表示该\u0026lt;th\u0026gt;单元格到底是栏的标题，还是列的标题。取值：row（行）、col（列）\n使用举例\n  \u0026lt;form\u0026gt; 表单标签 \u0026lt;input\u0026gt; 标签 ","date":"2020-11-07","permalink":"http://heeeyueee.github.io/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/","tags":["HTML"],"title":"HTML常用标签"},{"content":" 超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。\n HTML的历史 HTML的首个公开描述出现于一个名为HTML Tags 页面存档备份，存于互联网档案馆的文件中，由蒂姆·伯纳斯-李于1991年底提及。它描述18个元素，包括HTML初始的、相对简单的设计。它的最大特点就是支持超链接，点击链接就可以跳转到其他网页，从而构成了整个互联网。\n2004年，网页超文本应用技术工作小组（WHATWG）开始开发HTML5，并在2008年与W3C共同交付，2014年10月28日完成标准化。\nHTML 起手 \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;zh-CN\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1.0\u0026quot;\u0026gt;\r\u0026lt;meta http-equiv=\u0026quot;X-UA-Compatible\u0026quot; content=\u0026quot;ie=edge\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r   \u0026lt;!DOCTYPE \u0026gt;标签:文档类型，告诉浏览器如何解析网页\n  \u0026lt;html\u0026gt;标签:网页的顶层容器，即标签树结构的顶层节点，也称为根元素（root element），其他元素都是它的子元素。一个网页只能有一个\u0026lt;html\u0026gt;标签。lang属性，表示网页内容默认的语言。\n  \u0026lt;head\u0026gt;标签:容器标签，用于放置网页的元信息。它的内容不会出现在网页上，而是为网页渲染提供额外信息。\n   \u0026lt;head\u0026gt;子元素 作用     \u0026lt;meta\u0026gt;  设置网页的元数据   \u0026lt;link\u0026gt;  连接外部样式表   \u0026lt;title\u0026gt;  设置网页标题   \u0026lt;style\u0026gt;  放置内嵌的样式表   \u0026lt;script\u0026gt; 引入脚本   \u0026lt;noscript\u0026gt; 浏览器不支持脚本时，所要显示的内容   \u0026lt;base\u0026gt;  设置网页内部相对 URL 的计算基准      \u0026lt;meta\u0026gt;标签:设置或说明网页的元数据，必须放在\u0026lt;head\u0026gt;里面。一个\u0026lt;meta\u0026gt;标签就是一项元数据，网页可以有多个\u0026lt;meta\u0026gt;。\u0026lt;meta\u0026gt;标签约定放在\u0026lt;head\u0026gt;内容的最前面。上面代码中：第一个\u0026lt;meta\u0026gt;标签表示网页采用 UTF-8 格式编码，第二个\u0026lt;meta\u0026gt;标签表示网页在手机端可以自动缩放。\n   \u0026lt;meta\u0026gt;标签属性 作用     name 属性 表示元数据的名字   content 属性 表示元数据的值   http-equiv 属性 用来覆盖 HTTP 回应的头信息字段(与content属性一起使用)   charset属性 指定网页的编码方式 \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;       \u0026lt;title\u0026gt;标签:用于指定网页的标题，会显示在浏览器窗口的标题栏。\n  \u0026lt;body\u0026gt;标签:是一个容器标签，用于放置网页的主体内容。浏览器显示的页面内容，都放置在它的内部。它是\u0026lt;html\u0026gt;的第二个子元素，紧跟在\u0026lt;head\u0026gt;后面。\n   **ps:**怎样设置VS code的模板代码\nsettings——用户代码片段——搜索HTML.json——配置\n body中常用章节标签 \u0026lt;body\u0026gt;\r\u0026lt;header\u0026gt;页眉\u0026lt;/header\u0026gt;\r\u0026lt;main\u0026gt;\r\u0026lt;article\u0026gt;\r\u0026lt;h1\u0026gt;文章标题\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;文章内容\u0026lt;/p\u0026gt;\r\u0026lt;/article\u0026gt;\r\u0026lt;/main\u0026gt;\r\u0026lt;footer\u0026gt;页尾\u0026lt;/footer\u0026gt;\r\u0026lt;/body\u0026gt;\r  \u0026lt;header\u0026gt;:表示一篇文章或者一个区块的头部 \u0026lt;footer\u0026gt;:表示网页、文章或章节的尾部 \u0026lt;main\u0026gt;:标签表示页面的主体内容，一个页面只能有一个\u0026lt;main\u0026gt; \u0026lt;main\u0026gt;是顶层标签，不能放置在\u0026lt;header\u0026gt;、\u0026lt;footer\u0026gt;、\u0026lt;article\u0026gt;、\u0026lt;aside\u0026gt;、\u0026lt;nav\u0026gt;等标签之中。 \u0026lt;article\u0026gt;:表示页面里面一段完整的内容 \u0026lt;aside\u0026gt;:标签用来放置网页侧边栏或与网页、文章主要内容间接相关的部分 \u0026lt;section\u0026gt;:表示一个含有主题的独立部分，通常用在文档里面表示一个章节 \u0026lt;nav\u0026gt;:标签用于放置页面或文档的导航信息，往往放置在\u0026lt;header\u0026gt;里面 \u0026lt;h1\u0026gt;~\u0026lt;h6\u0026gt;:HTML 提供了6个标签，用来表示文章的标题。按照标题的等级，一共分成六级。  body中常用文本标签   \u0026lt;div\u0026gt;:一个通用标签，表示一个区块（division）\n  \u0026lt;p\u0026gt;:是一个块级元素，代表文章的一个段落（paragraph）\n  \u0026lt;span\u0026gt;:一个通用目的的行内标签（即不会产生换行），不带有任何语义\n  \u0026lt;br\u0026gt;:换行符，单独使用的，没有闭合标签\nPS：HTML空格和换行处理规则\n 标签内容的头部和尾部的空格，一律忽略不计\n标签内容里面的多个连续空格（包含制表符\\t），会被浏览器合并成一个\n浏览器还会将文本里面的换行符（\\n）和回车符（\\r），替换成空格\n   \u0026lt;hr\u0026gt;:水平线分割线,单独使用的，没有闭合标签\n  \u0026lt;pre\u0026gt;:一个块级元素，表示保留原来的格式（preformatted），即浏览器会保留该标签内部原始的换行和空格。 PS: HTML 标签在\u0026lt;pre\u0026gt;里面还是起作用的。\u0026lt;pre\u0026gt;只保留空格和换行，不会保留 HTML标签 **\n与code标签一起使用\n  \u0026lt;strong\u0026gt;:以粗体显示内容,表示内容本身的重要性\n  \u0026lt;em\u0026gt;:以斜体显示它包含的内容,表示语气上的强调\n  \u0026lt;code\u0026gt;:一个行内元素，表示标签内容是计算机代码，浏览器默认会以等宽字体显示。\n  \u0026lt;blockquote\u0026gt;:是一个块级标签，表示引用,cite属性，它的值是一个网址，表示引言来源，不会显示在网页上 *\u0026lt;q\u0026gt;:是一个行内标签，也表示引用。它与\u0026lt;blockquote\u0026gt;的区别，就是它不会产生换行。\n  HTML常用行级标签和块级标签  行级标签:可以和其他元素保持在同一行，不可以自动换行，但不能设置宽高 块级标签:不可以和其他元素保持在同一行（独占一行），可以自动换行，能设置宽高 嵌套规则:块标签可以套行标签，行标签不可以套块标签。P标签不要套块属性标签，可以套a，span，文本    块级标签 行级标签     \u0026lt;article\u0026gt; \u0026lt;b\u0026gt;   \u0026lt;aside\u0026gt;  \u0026lt;em\u0026gt;   \u0026lt;blockquote\u0026gt;  \u0026lt;strong\u0026gt;   \u0026lt;div\u0026gt;  \u0026lt;i\u0026gt;   \u0026lt;dl\u0026gt; \u0026lt;a\u0026gt;   \u0026lt;footer\u0026gt;  \u0026lt;br\u0026gt;   \u0026lt;form\u0026gt;  \u0026lt;img\u0026gt;   \u0026lt;h1\u0026gt;~\u0026lt;h6\u0026gt;  \u0026lt;q\u0026gt;   \u0026lt;header\u0026gt;  \u0026lt;span\u0026gt;   \u0026lt;hgroup\u0026gt;  \u0026lt;button\u0026gt;   \u0026lt;hr\u0026gt;  \u0026lt;input\u0026gt;   \u0026lt;ol\u0026gt;  \u0026lt;label\u0026gt;   \u0026lt;p\u0026gt;  \u0026lt;select\u0026gt;   \u0026lt;section\u0026gt;  \u0026lt;code\u0026gt;   \u0026lt;table\u0026gt;  \u0026lt;abbr\u0026gt;   \u0026lt;ul\u0026gt;  \u0026amp;nbsp   \u0026lt;video\u0026gt;  \u0026amp;copy      元素的属性 网页元素的属性（attribute）可以定制元素的行为，不同的属性会导致元素有不同的行为。元素属性的写法是 HTML 标签内部的“键值对”。\n 属性名与标签名一样，不区分大小写，lang和LANG是同一个属性。 属性名与属性值之间，通过等号=连接。属性值可以放在单引号或双引号之中，建议统一使用双引号。某些属性值可以不使用引号，但是建议不要这样写。 有些属性是布尔属性，属性值可以省略，只要添加了属性名，就表示打开该属性。如：checked、hidden  全局属性\n全局属性（global attributes）是所有元素都可以使用的属性。\n id:属性是元素在网页内的唯一标识符,慎用,html不会纠错重复的id class:属性用来对网页元素进行分类。元素可以同时具有多个 class，它们之间使用空格分隔 title:属性用来为元素添加附加说明。鼠标悬浮在元素上面时，会将title属性值作为浮动提示，显示出来。 tabindex:控制 Tab 键遍历网页元素的顺序。  0，表示最后才被 tab 访问 -1，表示不可被 tab 访问 正整数， 网页元素按照从小到大的顺序（1、2、3、……），参与 Tab 键的遍历。   style:指定当前元素的 CSS 样式 accesskey:指定网页元素获得焦点的快捷键 hidden:一个布尔属性，表示当前的网页元素不再跟页面相关，因此浏览器不会渲染这个元素，所以就不会在网页中看到它 dir:属性表示文字的阅读方向  ltr：从左到右阅读，比如英语。 rtl：从右到左阅读 auto：浏览器根据内容的解析结果，自行决定   contenteditable:contenteditable属性允许用户修改内容。它有两个可能的值。  true或空字符串：内容可以编辑 false：不可以编辑    HTML5验证器  安装检查工具validator $ yarn global add node-w3c-validator\r  在VS code的终端通过命令使用 node-w3c-validator -i 被检查的HTMl文件.html\r   取消HTML标签默认属性样式 cssreset.css\n* {\rmargin: 0;\rpadding: 0;\rbox-sizing: border-box;\r}\r*::before,\r*::after {\rbox-sizing: border-box;\r}\ra {\rcolor: inherit;\rtext-decoration: none;\r}\rinput,\rbutton {\rfont-family: inherit;\r}\rol,\rul {\rlist-style: none;\r}\rtable {\rborder-collapse: collapse;\rborder-spacing: 0;\r}\r","date":"2020-11-06","permalink":"http://heeeyueee.github.io/post/html%E5%85%A5%E9%97%A8/","tags":["HTML"],"title":"HTML入门"}]